Create model of the products table
Create a controller that puts the data in the view
Create view of the products products.php

Routes.php
$routes->setDefaultController('Products');
$routes->get('/', 'Products::index');

view:edit-product.php
<!DOCTYPE html>
<html>
<head>
  <title>Codeigniter 4 Edit User Form With Validation Example</title>
 <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
 
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.js"></script> 
 
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.0/jquery.validate.js"></script>  
 
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.0/additional-methods.min.js"></script>
 
</head>
<body>

//page when user clicks buy
 <div class="container">
    <br>
    <?= \Config\Services::validation()->listErrors(); ?>
 
    <span class="d-none alert alert-success mb-3" id="res_message"></span>
 
    <div class="row">
      <div class="col-md-9">
        //user clicks submit goes to update function
        <form action="<?php echo base_url('/products/update');?>" name="edit-user" id="edit-user" method="post" accept-charset="utf-8">

          //hidden textbox for id
          <input type="hidden" name="id" class="form-control" id="id" value="<?php echo $products['id'] ?>">
          
          //hidden textbox for price
          <input type="hidden" name="price" class="form-control" id="price" value="<?php echo $products['p_price'] ?>">

          <div class="form-group">
            <label for="stock">How many items do you want to have?</label>
            <input type="text" name="stock" class="form-control" id="stock" placeholder="Please enter">
             
          </div> 
 
          <div class="form-group">
            <label for="onhand">How many items do you want to have left over</label>
            <input type="text" name="onhand" class="form-control" id="onhand" placeholder="Please enter" value="<?php echo $products['onhand'] ?>">
             
          </div>  
          

          <div class="form-group">
           <button type="submit" id="send_form" class="btn btn-success">Submit</button>
          </div>
          
        </form>
      </div>
 
    </div>
  
</div>
 <script>
   if ($("#edit-product").length > 0) {
      $("#edit-product").validate({
      
    rules: {
      name: {
        required: true,
      },
  
        
    },
    messages: {
        
      name: {
        required: "Please enter name",
      },
       
    },
  })
}
</script>
</body>
</html>

view:products.php
<!doctype html>
<html lang="en">
  <head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>Codeigniter 4 users List Example - Tutsmake.com</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
</head>
<body>

//main products page shows all products 
<div class="container mt-5">
    <a href="<?php echo site_url('/products/create') ?>" class="btn btn-success mb-2">Create</a>
    <?php
     if(isset($_SESSION['msg'])){
        echo $_SESSION['msg'];
      }
     ?>
  <div class="row mt-3">
     <table class="table table-bordered" id="products">

       //columns in the table
       <thead>
          <tr>
             <th>Id</th>
             <th>Product Name</th>
             <th>Product Description</th>
             <th>Stock</th>
             <th>On Hand</th>
             <th>Total</th>
             <th>Action</th>
          </tr>
       </thead>
       <tbody>
          <?php if($products): ?>
          //loop through table in each result
          <?php foreach($products as $product): ?>
          //display all data in each row from a database table called products
          <tr>	
             <td><?php echo $product['id']; ?></td>
             <td><?php echo $product['p_name']; ?></td>
             <td><?php echo $product['p_desc']; ?></td>
             <td><?php echo $product['stock']; ?></td>
             <td><?php echo $product['onhand']; ?></td>
             <td><?php echo $product['total']; ?></td>

             //add buttons to edit and delete products
             <td>
              <a href="<?php echo base_url('/products/edit/'.$product['id']);?>" class="btn btn-success">Edit</a>
              <a href="<?php echo base_url('/products/delete/'.$product['id']);?>" class="btn btn-danger">Delete</a>
              </td>
          </tr>
         <?php endforeach; ?>
         <?php endif; ?>
       </tbody>
     </table>
  </div>
</div>
 
<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
 
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.20/css/jquery.dataTables.min.css">
 
<script src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js" type="text/javascript"></script>
 
<script>
    $(document).ready( function () {
      $('#products').DataTable();
  } );
</script>
</body>
</html>

Model:ProductModel.php
<?php namespace App\Models;
use CodeIgniter\Database\ConnectionInterface;
use CodeIgniter\Model;

//create a model of the database table products 
class ProductModel extends Model
{
    protected $table = 'products';
      
    protected $allowedFields = ['total', 'onhand'];
}
?>

Controller:Products.php
//controller connects database to the display page
<?php namespace App\Controllers;
 
use CodeIgniter\Controller;
use App\Models\ProductModel;
 
class Products extends Controller
{
 
    public function index()
    {    
        //get the model from the model page ProductModel
        $model = new ProductModel();
 
        //store the data of the model in $data['products']
        $data['products'] = $model->orderBy('id', 'DESC')->findAll();
         
        //display on page of products with variable $data       
        return view('products', $data);
    }    
 
    //create a new product page
    public function create()
    {    
        return view('create-product');
    }
 
    public function store()
    {  
        //get form and url variables
        helper(['form', 'url']);
        //connect to model page ProductModel   
        $model = new ProductModel();
 
        //get variables from edit page and save to database
        $data = [
 
            'stock' => $this->request->getVar('stock'),
            'onhand'  => $this->request->getVar('onhand'),
            ];
 
        //insert data to database
        $save = $model->insert($data);
 
        //return to display all products in your database
        return redirect()->to( base_url('/products') );
    }
 
    public function edit($id = null)
    {
      
     $model = new ProductModel();
 
     //edit function that that edit's product with $id
     $data['products'] = $model->where('id', $id)->first();
 
     //display page edit-product with the product data of $id
     return view('edit-product', $data);
    }
 
    public function update()
    {  
 
        helper(['form', 'url']);
         
        $model = new ProductModel();

        //get the id 
        $id = $this->request->getVar('id');
        //get the quantity you want to buy
        $s = $this->request->getVar('onhand');
        //get the product with an id, $id
        $prod=$model->find($id);
        
        //check if amount greater than inventory onhand then set to previous value in database
        if ($s > $prod['onhand'])
        {
	$s=$prod['onhand'];
        }
        //store in database id
        //store in column onhand minus items that you just bought
        //store in column total amount you started with minus the amount you just bought
        $data = [
            'id' => $id,
            
            'onhand'  => $prod['onhand'] - $s,
            'total' => ($prod['onhand'] * $prod['p_price']) - ($prod['p_price'] * $s),
            ];

        //update database 
        $save = $model->update($id,$data);
 
        //go to products page
        return redirect()->to( base_url('/products') );
    }

    //delete product function 
    public function delete($id = null)
    {
 
     $model = new UserModel();
 
     $data['products'] = $model->where('id', $id)->delete();
      
     return redirect()->to( base_url('/products') );
    }
}
